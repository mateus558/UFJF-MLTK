cmake_minimum_required(VERSION 3.14)
project(UFJF-MLTK LANGUAGES CXX VERSION 1.0.0)

if(UNIX)
    set(CMAKE_INSTALL_PREFIX /usr)
endif()

if(WIN32)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1)
    set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
    set(CMAKE_INSTALL_PREFIX "C:/${PROJECT_NAME}")
endif()

option(BUILD_GUI "Tells if the Qt GUI application must be built." OFF)
option(BUILD_CLI "Tells if the console application must be built." ON)
option(BUILD_LIBVISUALIZE "Tells if the visualization module must be built." ON)
option(BUILD_LIBCLASSIFIER "Tells if the classifier module must be built." ON)
option(BUILD_LIBREGRESSOR "Tells if the regressor module must be built." ON)
option(BUILD_LIBCLUSTERER "Tells if the clusterer module must be built." ON)
option(BUILD_LIBFEATSELECT "Tells if the feature selection module must be built." ON)
option(BUILD_LIBVALIDATION "Tells if the validation module must be built." ON)
option(BUILD_LIBENSEMBLE "Tells if the ensemble module must be built." ON)

set(LIBMAIN ufjfmltk)
set(LIB_OUTPUT_PREFIX ${LIBMAIN}-)
set(LIBCORE ${LIB_OUTPUT_PREFIX}core)
set(LIBVISUALIZE ${LIB_OUTPUT_PREFIX}visualize)
set(LIBCLASSIFIER ${LIB_OUTPUT_PREFIX}classifier)
set(LIBREGRESSOR ${LIB_OUTPUT_PREFIX}regressor)
set(LIBCLUSTERER ${LIB_OUTPUT_PREFIX}clusterer)
set(LIBFEATSELECT ${LIB_OUTPUT_PREFIX}featselect)
set(LIBVALIDATION ${LIB_OUTPUT_PREFIX}validation)
set(LIBENSEMBLE ${LIB_OUTPUT_PREFIX}ensemble)

message(STATUS "UFJF-MLTK Version: ${PROJECT_VERSION}")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")

if(WIN32)
    set(RUNTIME_DIR bin)
else()
    set(RUNTIME_DIR lib)
endif()

add_subdirectory(Modules)
if(BUILD_CLI)
    add_subdirectory(CLI)
endif()

if(BUILD_GUI)
    add_subdirectory(GUI)
endif()

ENABLE_TESTING()
add_subdirectory(Examples)
add_subdirectory(Tests)